error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:18:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
17 │ public fun test01<A>(b: &Box<A>) {
   │                   -          - The type 'A' does not have the ability 'copy'
   │                   │           
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
18 │     let b_val = b[];
   │                 ^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:18:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
17 │ public fun test01<A>(b: &Box<A>) {
   │                   -          - The type 'A' does not have the ability 'drop'
   │                   │           
   │                   To satisfy the constraint, the 'drop' ability would need to be added here
18 │     let b_val = b[];
   │                 ^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:18:17
   │
17 │ public fun test01<A>(b: &Box<A>) {
   │                   -          - The type 'A' does not have the ability 'copy'
   │                   │           
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
18 │     let b_val = b[];
   │                 ^^^ Invalid implicit copy of index result without the 'copy' ability

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:23:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
22 │ public fun test02<A>(b: &mut Box<A>) {
   │                   -              - The type 'A' does not have the ability 'copy'
   │                   │               
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
23 │     let b_val = &b[];
   │                 ^^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:23:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
22 │ public fun test02<A>(b: &mut Box<A>) {
   │                   -              - The type 'A' does not have the ability 'drop'
   │                   │               
   │                   To satisfy the constraint, the 'drop' ability would need to be added here
23 │     let b_val = &b[];
   │                 ^^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:23:18
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
22 │ public fun test02<A>(b: &mut Box<A>) {
   │                   -              - The type 'A' does not have the ability 'copy'
   │                   │               
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
23 │     let b_val = &b[];
   │                  ^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:23:18
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
22 │ public fun test02<A>(b: &mut Box<A>) {
   │                   -              - The type 'A' does not have the ability 'drop'
   │                   │               
   │                   To satisfy the constraint, the 'drop' ability would need to be added here
23 │     let b_val = &b[];
   │                  ^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:28:17
   │
 9 │ public fun in_mut<T: drop + copy>(self: &mut Box<T>): &mut T { &mut self.value }
   │                             ---- 'copy' constraint declared here
   ·
27 │ public fun test03<A: drop>(b: &mut Box<A>) {
   │                   -                    - The type 'A' does not have the ability 'copy'
   │                   │                     
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
28 │     let b_val = &mut b[];
   │                 ^^^^^^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:28:22
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
27 │ public fun test03<A: drop>(b: &mut Box<A>) {
   │                   -                    - The type 'A' does not have the ability 'copy'
   │                   │                     
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
28 │     let b_val = &mut b[];
   │                      ^^^ 'copy' constraint not satisifed

warning[W09002]: unused variable
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:32:28
   │
32 │ public fun test04<C: copy>(b: &mut Box<A>) {
   │                            ^ Unused parameter 'b'. Consider removing or prefixing with an underscore: '_b'
   │
   = This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E03006]: unexpected name in this position
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:32:40
   │
32 │ public fun test04<C: copy>(b: &mut Box<A>) {
   │                                        ^ Unexpected address identifier. An address identifier is not a valid type

error[E01013]: invalid 'move' or 'copy'
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:33:17
   │
33 │     let b_val = copy &mut b[];
   │                 ^^^^ -------- Expected a name or path access, e.g. 'x' or 'e.f'
   │                 │     
   │                 Invalid 'copy' of expression

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:38:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
37 │ public fun test05<A: copy,B: drop>(b: &Box<A>, mb: &mut Box<B>) {
   │                   -                        - The type 'A' does not have the ability 'drop'
   │                   │                         
   │                   To satisfy the constraint, the 'drop' ability would need to be added here
38 │     let b_val = &b[]; // invalid
   │                 ^^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:38:18
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
37 │ public fun test05<A: copy,B: drop>(b: &Box<A>, mb: &mut Box<B>) {
   │                   -                        - The type 'A' does not have the ability 'drop'
   │                   │                         
   │                   To satisfy the constraint, the 'drop' ability would need to be added here
38 │     let b_val = &b[]; // invalid
   │                  ^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:39:18
   │
 9 │ public fun in_mut<T: drop + copy>(self: &mut Box<T>): &mut T { &mut self.value }
   │                             ---- 'copy' constraint declared here
   ·
37 │ public fun test05<A: copy,B: drop>(b: &Box<A>, mb: &mut Box<B>) {
   │                           -                                 - The type 'B' does not have the ability 'copy'
   │                           │                                  
   │                           To satisfy the constraint, the 'copy' ability would need to be added here
38 │     let b_val = &b[]; // invalid
39 │     let mb_val = &mut mb[]; // invalid
   │                  ^^^^^^^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:39:23
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
37 │ public fun test05<A: copy,B: drop>(b: &Box<A>, mb: &mut Box<B>) {
   │                           -                                 - The type 'B' does not have the ability 'copy'
   │                           │                                  
   │                           To satisfy the constraint, the 'copy' ability would need to be added here
38 │     let b_val = &b[]; // invalid
39 │     let mb_val = &mut mb[]; // invalid
   │                       ^^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:44:17
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
43 │ public fun test06<A:drop ,B: copy>(b: &Box<A>, mb: &mut Box<B>) {
   │                   -                        - The type 'A' does not have the ability 'copy'
   │                   │                         
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
44 │     let b_val = &b[];
   │                 ^^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:44:18
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                         ---- 'copy' constraint declared here
   ·
43 │ public fun test06<A:drop ,B: copy>(b: &Box<A>, mb: &mut Box<B>) {
   │                   -                        - The type 'A' does not have the ability 'copy'
   │                   │                         
   │                   To satisfy the constraint, the 'copy' ability would need to be added here
44 │     let b_val = &b[];
   │                  ^^^ 'copy' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:45:18
   │
 9 │ public fun in_mut<T: drop + copy>(self: &mut Box<T>): &mut T { &mut self.value }
   │                      ---- 'drop' constraint declared here
   ·
43 │ public fun test06<A:drop ,B: copy>(b: &Box<A>, mb: &mut Box<B>) {
   │                           -                                 - The type 'B' does not have the ability 'drop'
   │                           │                                  
   │                           To satisfy the constraint, the 'drop' ability would need to be added here
44 │     let b_val = &b[];
45 │     let mb_val = &mut mb[];
   │                  ^^^^^^^^^ 'drop' constraint not satisifed

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/index_call_constraints_unsatisfied.move:45:23
   │
 6 │ public fun in<T: drop + copy>(self: &Box<T>): &T { &self.value }
   │                  ---- 'drop' constraint declared here
   ·
43 │ public fun test06<A:drop ,B: copy>(b: &Box<A>, mb: &mut Box<B>) {
   │                           -                                 - The type 'B' does not have the ability 'drop'
   │                           │                                  
   │                           To satisfy the constraint, the 'drop' ability would need to be added here
44 │     let b_val = &b[];
45 │     let mb_val = &mut mb[];
   │                       ^^^^ 'drop' constraint not satisifed

