error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:10:36
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
10 │     macro fun useless<U>(x: X<U>): X<U> {
   │                                    ^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:11:16
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
11 │         freeze<X<U>>(&mut X());
   │                ^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:11:27
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
11 │         freeze<X<U>>(&mut X());
   │                           ^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:12:9
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
 4 │     public fun f<T: copy>(_: X<T>) {}
   │                     ---- 'copy' constraint declared here
   ·
12 │         f<U>(X());
   │         ^^^^^^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:12:14
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
12 │         f<U>(X());
   │              ^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:13:9
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
13 │         X<U>();
   │         ^^^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:14:9
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
 4 │     public fun f<T: copy>(_: X<T>) {}
   │                     ---- 'copy' constraint declared here
   ·
14 │         x.f<U>();
   │         ^^^^^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:15:23
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
15 │         apply!(x, |_: X<U>| ());
   │                       ^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:16:9
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
16 │         X<U>() = x;
   │         ^^^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:17:16
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
17 │         let _: X<U> = x;
   │                ^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:18:13
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
18 │         let X<U>() = x;
   │             ^^^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E04003]: built-in operation not supported
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:19:10
   │
19 │         (0 as U);
   │          ^ Invalid argument to 'as'
   ·
26 │         useless!<None>(X());
   │                  ---- Found: 'a::m::None'. But expected: 'u8', 'u16', 'u32', 'u64', 'u128', 'u256'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:20:13
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
20 │         (x: X<U>);
   │             ^^^^ 'copy' constraint not satisifed
   ·
26 │         useless!<None>(X());
   │                  ---- The type 'a::m::None' does not have the ability 'copy'

error[E05001]: ability constraint not satisfied
   ┌─ tests/move_2024/typing/macro_subst_tparams_invalid.move:26:24
   │
 2 │     public struct None() has drop;
   │                   ---- To satisfy the constraint, the 'copy' ability would need to be added here
 3 │     public struct X<phantom T: copy>() has copy, drop, store;
   │                                ---- 'copy' constraint declared here
   ·
26 │         useless!<None>(X());
   │                  ----  ^^^ 'copy' constraint not satisifed
   │                  │      
   │                  The type 'a::m::None' does not have the ability 'copy'

