Command `build -v`:
BUILDING build_include_exclude_stdlib
error[E03002]: unbound module
  ┌─ ./sources/UseVector.move:2:7
  │
2 │   use std::vector;
  │       ^^^^^^^^^^^ Invalid 'use'. Unbound module: 'std::vector'

warning[W09002]: unused variable
  ┌─ ./sources/UseVector.move:4:16
  │
4 │   public fun f(addrs: &vector<address>): address {
  │                ^^^^^ Unused parameter 'addrs'. Consider removing or prefixing with an underscore: '_addrs'
  │
  = This warning can be suppressed with '#[allow(unused_variable)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

error[E03002]: unbound module
  ┌─ ./sources/UseVector.move:5:5
  │
5 │     vector::borrow(addrs, 0)
  │     ^^^^^^ Unbound module alias 'vector'

Command `-d -v build`:
INCLUDING DEPENDENCY MoveStdlib
BUILDING build_include_exclude_stdlib
error[E04007]: incompatible types
   ┌─ ./sources/UseVector.move:5:5
   │
 4 │   public fun f(addrs: &vector<address>): address {
   │                                          ------- Expected: 'address'
 5 │     vector::borrow(addrs, 0)
   │     ^^^^^^^^^^^^^^^^^^^^^^^^ Invalid return expression
   │
   ┌─ ./../../../../move-stdlib/sources/vector.move:27:69
   │
27 │     native public fun borrow<Element>(v: &vector<Element>, i: u64): &Element;
   │                                                                     -------- Given: '&address'

