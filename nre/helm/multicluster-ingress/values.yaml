# Default values for indexer-writer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

backendConfigs:
  - name: indexer-readers
    healthCheck:
      checkIntervalSec: 2
      timeoutSec: 1
      healthyThreshold: 3
      unhealthyThreshold: 2
      type: HTTP
      requestPath: /metrics
      port: 9184
    securityPolicy:
      name: default-rpc-throttle # add existing security policy name here. this is a dummy value
    sessionAffinity:
      affinityType: CLIENT_IP
  - name: graphql
    healthCheck:
      checkIntervalSec: 2
      timeoutSec: 1
      healthyThreshold: 3
      unhealthyThreshold: 2
      type: HTTP
      requestPath: /health
      port: 8001
    securityPolicy:
      name: default-rpc-throttle # add existing security policy name here. this is a dummy value
    sessionAffinity:
      affinityType: CLIENT_IP


frontendConfig:
  name: rpc
  spec:
    sslPolicy: ssl-policy-default # add an existing sslpolicy here. this is a dummy value
    redirectToHttps: true


multiclusterIngress:
  enabled: true
  name: rpc
  annotations:
    staticIp: DYNAMIC
    frontendConfig: rpc
  spec:
    backend:
      serviceName: graphql
      servicePort: 80
    rules:
      - host: DYNAMIC
        http:
          paths:
            - path: /json-rpc
              backend:
                serviceName: indexer-readers
                servicePort: 80
            - path: /graphql
              backend:
                serviceName: graphql
                servicePort: 80
            - path: /graphql/stable
              backend:
                serviceName: graphql
                servicePort: 80
            - path: /graphql/2024.4
              backend:
                serviceName: graphql
                servicePort: 80
    tls:
      - secretName: DYNAMIC # make this the k8s secret name that holds tls certs

multiClusterServices:
  - name: indexer-readers
    annotations:
      backendConfig: '{"default": "indexer-readers"}'
    selector:
      app: indexer-readers
    ports:
      - name: json-rpc
        protocol: TCP
        port: 80
        targetPort: 9000
  - name: graphql
    annotations:
      backendConfig: '{"default": "graphql"}'
    selector:
      app: graphql
    ports:
      - name: graphql
        protocol: TCP
        port: 80
        targetPort: 8001

