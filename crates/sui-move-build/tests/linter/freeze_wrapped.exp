warning[Lint W04001]: attempting to freeze wrapped objects
   ┌─ tests/linter/freeze_wrapped.move:42:40
   │
14 │         inner: Inner,
   │                ----- The field of this type is a wrapped object
   ·
42 │         transfer::public_freeze_object(w);
   │                                        ^ Freezing an object of type 'Wrapper' also freezes all objects wrapped in its field 'inner'.
   │
   = This warning can be suppressed with '#[lint_allow(freeze_wrapped)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04001]: attempting to freeze wrapped objects
   ┌─ tests/linter/freeze_wrapped.move:46:40
   │
 8 │     struct Inner has key, store {
   │            ----- Indirectly wrapped object is of this type
   ·
23 │         s: S,
   │            - The field of this type indirectly contains a wrapped object
   ·
46 │         transfer::public_freeze_object(w);
   │                                        ^ Freezing an object of type 'IndirectWrapper' also freezes all objects wrapped in its field 's'.
   │
   = This warning can be suppressed with '#[lint_allow(freeze_wrapped)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04001]: attempting to freeze wrapped objects
   ┌─ tests/linter/freeze_wrapped.move:51:40
   │
14 │         inner: Inner,
   │                ----- The field of this type is a wrapped object
   ·
51 │         transfer::public_freeze_object(v);
   │                                        ^ Freezing an object of type 'Wrapper' also freezes all objects wrapped in its field 'inner'.
   │
   = This warning can be suppressed with '#[lint_allow(freeze_wrapped)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04001]: attempting to freeze wrapped objects
   ┌─ tests/linter/freeze_wrapped.move:55:40
   │
28 │         inner: T,
   │                - The field of this type is a wrapped object
   ·
55 │         transfer::public_freeze_object(w);
   │                                        ^ Freezing an object of type 'GenWrapper' also freezes all objects wrapped in its field 'inner'.
   │
   = This warning can be suppressed with '#[lint_allow(freeze_wrapped)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

warning[Lint W04001]: attempting to freeze wrapped objects
   ┌─ tests/linter/freeze_wrapped.move:59:40
   │
31 │     struct S2<T: key + store> has store {
   │               - Indirectly wrapped object is of this type
   ·
37 │         inner: S2<T>,
   │                ----- The field of this type indirectly contains a wrapped object
   ·
59 │         transfer::public_freeze_object(w);
   │                                        ^ Freezing an object of type 'IndirectGenWrapper' also freezes all objects wrapped in its field 'inner'.
   │
   = This warning can be suppressed with '#[lint_allow(freeze_wrapped)]' applied to the 'module' or module member ('const', 'fun', or 'struct')

